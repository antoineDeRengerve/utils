#!/usr/bin/env Rscript
library(data.table)
library(ggplot2)

args = commandArgs(trailingOnly=TRUE)

# test if there is at least one argument: if not, return an error
if (length(args)==0) {
  args[1] = "data_out.RData"

} 
if (length(args)<=1) {
  # default output file
  args[2] = "out"
}

if ( args[1] == "--help") {
  message("arg1")
} 

load(args[1])
if(!exists("data_out"))
{
  ls()
  stop(paste("data_out does not exist in loaded file: ",args[1]))
}
data_in = data_out


# load title, x, y
title = "Battery test"
x_name = "time"
y_name = "V/A/Ah/degC/%"


# display
x = data_in[,1]
x
y = data_in[,-1]
y

nb_col=dim(y)[2]

# melt data into long-format
DT = melt(data_in, id.vars=1,variable.name="measures",value.name="y")
#, 
#                measure.vars = c("dob_child1", "dob_child2", "dob_child3"))
DT

names(DT)[1]="x"

p <- ggplot(data=DT, aes(x=x, y=y, group=measures, colour=measures, shape=measures)) 
p <- p + geom_point(size=4)
p <- p + ggtitle(title) 
p <- p + geom_line(size=2)
#p <- p + geom_smooth()
p <- p + theme(axis.text.x = element_text(angle = 60, hjust = 1))

ggsave(plot=p, file="output.png",width=10,height=6)

q()

g_range <- range(0, y)
message(g_range)

jpeg(paste(args[2],".jpg"),1024,720)

plot(x, y[,1], type="l", col=palette()[1],ylim=g_range)
par(new=TRUE)
for(i in 2:nb_col) {
  lines(x, y[,i], type="o", col=palette()[i])
}

#create a title with a red, bold/italic font
title(main="Battery", col.main="blue", font.main=124)





